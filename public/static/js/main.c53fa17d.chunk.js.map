{"version":3,"sources":["types/types.js","helpers/changeFormatToDateEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js","helpers/fetch.js"],"names":["types","changeFormatToDateEvents","events","map","e","start","moment","toDate","end","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","register","checkingFinish","startLogout","dispatch","localStorage","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","fetchNoToken","resp","json","body","ok","setItem","token","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","seconds","add","deadline","clone","initEvent","notes","CalendarModal","setDateStart","setDateEnd","titleValid","setTitleValid","isOpen","ui","modalOpen","activeEvent","calendar","formValues","setFormValues","useEffect","closeModal","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","fetchWithToken","id","console","log","_id","error","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","getItem","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","eaxct","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById","baseUrl","process","module","exports","endpoint","data","method","url","fetch","headers","JSON","stringify"],"mappings":"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","file":"static/js/main.c53fa17d.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventDefaultValue: '[event] Event default value',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',//*\r\n    authLogin: '[auth] Login',\r\n    authRegister: '[auth] Register',\r\n    authRefreshToken: '[auth] Refresh token',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const changeFormatToDateEvents = (events = []) => {\r\n \r\n    return events.map((e) => ({\r\n        ...e,\r\n        start: moment(e.start).toDate(),\r\n        end: moment(e.end).toDate()\r\n    }));\r\n}","import { types } from \"../types/types\";\r\n\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { changeFormatToDateEvents } from \"../helpers/changeFormatToDateEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid, name }  = getState().auth;\r\n\r\n        const resp = await fetchWithToken('events', event, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        try {\r\n            if ( body.ok ) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n                dispatch( eventAddNew(event) );\r\n                \r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventDefaultValue = () => ({\r\n    type: types.eventDefaultValue\r\n});\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {            \r\n            \r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();   \r\n            \r\n            if(body.ok) {\r\n                dispatch( eventUpdated(event) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleted = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { activeEvent } = getState().calendar;\r\n\r\n        try {            \r\n            \r\n            const resp = await fetchWithToken(`events/${ activeEvent.id }`, {}, 'DELETE');\r\n            const body = await resp.json();   \r\n            \r\n            if(body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            const events = changeFormatToDateEvents(body.events);\r\n            if ( body.ok ) {   \r\n                dispatch( eventLoaded(events) );                \r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n","\r\nimport { fetchNoToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { eventDefaultValue } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    \r\n    return async ( dispatch ) => {\r\n        \r\n        const resp = await fetchNoToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    \r\n    return async ( dispatch ) => {\r\n        \r\n        const resp = await fetchNoToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( register({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nconst register = ( user ) => ({\r\n    type: types.authRegister,\r\n    payload: user\r\n});\r\n\r\nexport const startChecking = () => {\r\n    return async ( dispatch ) => {\r\n        \r\n        const resp = await fetchWithToken('auth/refresh');\r\n        const body = await resp.json();\r\n\r\n        \r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();        \r\n        dispatch( logout() );\r\n        dispatch( eventDefaultValue() );\r\n    };\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});","\r\n\r\nimport { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\r\n        lEmail: 'jhon.carrasco@gmail.com',\r\n        lPassword: '123456'\r\n    } );\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\r\n        rName: 'Esteban Albornoz',\r\n        rEmail: 'esteban@gmail.com',\r\n        rPassword: '123456',\r\n        rPassword2: '123456'\r\n    } );\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword !== rPassword2 ) {\r\n            Swal.fire('Error', 'Passwords must be the same', 'error');\r\n        }\r\n\r\n        dispatch( startRegister(rName, rEmail, rPassword ));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword\"\r\n                                value={ rPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{ name }</span>\r\n\r\n            <button \r\n            className=\"btn btn-outline-danger\"\r\n            onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\" ></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ( { event } ) => {\r\n    // console.log('event', event)\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <br/>\r\n            <span>{ user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdated } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minute(0).seconds(0).add(1, 'hours');// 3:00:00\r\nconst deadline = now.clone().minute(0).seconds(0).add(1, 'hours');// 4:00:00\r\n\r\nconst initEvent = {\r\n    title: 'Evento Microsoft',\r\n    notes: 'Fundamento DevOps',\r\n    start: now.toDate(),\r\n    end: deadline.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(deadline.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const { modalOpen: isOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    \r\n\r\n    const [formValues, setFormValues] = useState( initEvent )\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        // console.log(activeEvent)\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        setFormValues( initEvent );\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const  handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            // console.log('La fecha de termino debe ser mayor a fecha de inicio')\r\n            return Swal.fire('Error', 'La fecha de término debe ser mayor a fecha de inicio.', 'error');            \r\n        }\r\n\r\n        if( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdated( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n        \r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            //   onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { activeEvent ? 'Editar evento' : 'Nuevo evento' }</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={start}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={end}\r\n                        minDate={ start } // debe ser posterior a dateStart. el mensaje de error estará en el idioma del navegador.\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={ `form-control ${ !titleValid && 'is-invalid'}` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleClickDelete = () => {\r\n        dispatch( eventStartDeleted() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleClickDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        // console.log('onDoubleClick', e)\r\n        \r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        // console.log('onSelectEvent', e)\r\n        dispatch( eventSetActive(e) );\r\n        \r\n    }\r\n\r\n\r\n    const onViewChange = (e) => {\r\n        // console.log('onViewChange', e)\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log('onSelectSlot', e)\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        // console.log(event, start, end, isSelected )\r\n        \r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7': '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            { activeEvent && <DeleteEventFab /> }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );        \r\n\r\n    }, [dispatch]);\r\n\r\n    if ( checking ) {\r\n        return (<h5>Wait...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        eaxct\r\n                        path=\"/\"\r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n            \r\n        case types.authRegister:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n// Reference state\r\n/*{\r\n    id: new Date().getTime(),\r\n    title: 'Mi cumpleaños',\r\n    start: moment().toDate(),\r\n    end: moment().add(1, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar la torta',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Jhon Carrasco'\r\n    }\r\n}*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ],\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventDefaultValue:\r\n            return {\r\n                ...state,\r\n                events: [],\r\n                activeEvent: null\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        \r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchNoToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    fetchNoToken,\r\n    fetchWithToken\r\n}"],"sourceRoot":""}